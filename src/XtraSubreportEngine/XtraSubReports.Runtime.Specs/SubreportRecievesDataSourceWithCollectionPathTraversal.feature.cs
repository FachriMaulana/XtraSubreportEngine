// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.239
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace XtraSubReports.Runtime.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Subreport Recieves Datasource With Collection Path Traversal")]
    public partial class SubreportRecievesDatasourceWithCollectionPathTraversalFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SubreportRecievesDataSourceWithCollectionPathTraversal.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Subreport Recieves Datasource With Collection Path Traversal", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Subreport inside of a group header band")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void SubreportInsideOfAGroupHeaderBand()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Subreport inside of a group header band", new string[] {
                        "mytag"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("A parent report exists");
#line 9
 testRunner.And("the parent report has a datasource");
#line 10
 testRunner.And("the parent report has a group traversal on a collection inside a detail band");
#line 11
 testRunner.And("the group contains a subreport in its header");
#line 12
 testRunner.When("the report engine runs");
#line 13
 testRunner.Then("the subreport should have the same datasource as the containing group\'s datasourc" +
                    "e collection");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Subreport inside of a group footer band")]
        public virtual void SubreportInsideOfAGroupFooterBand()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Subreport inside of a group footer band", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("A parent report exists");
#line 17
 testRunner.And("the parent report has a datasource");
#line 18
 testRunner.And("the parent report has a group traversal on a collection inside a detail band");
#line 19
 testRunner.And("the group contains a subreport in its footer");
#line 20
 testRunner.When("the report engine runs");
#line 21
 testRunner.Then("the subreport should have the same datasource as the containing group\'s datasourc" +
                    "e collection");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Subreport inside of a group detail band")]
        public virtual void SubreportInsideOfAGroupDetailBand()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Subreport inside of a group detail band", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given("A parent report exists");
#line 25
 testRunner.And("the parent report has a datasource");
#line 26
 testRunner.And("the parent report has a group traversal on a collection inside a detail band");
#line 27
 testRunner.And("the group\'s detail band has a subreport");
#line 28
 testRunner.When("the report engine runs");
#line 29
 testRunner.Then("each subreport instance should have a collection datasource containing only one i" +
                    "tem");
#line 30
 testRunner.And("each subreport instance\'s datasource contains the same datasource as the containi" +
                    "ng group\'s detail band");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
